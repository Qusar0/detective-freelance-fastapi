version: '3.8'

services:
  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn server.__main__:app --host 0.0.0.0 --port 8001
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    ports:
      - "8001:8001"
    environment:
      - FLASK_DEBUG=1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  celery_num:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery  -A run.celery_app worker --concurrency 50 -P eventlet -Q num_tasks --loglevel=INFO
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web

  celery_telegram:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery  -A run.celery_app worker --concurrency 50 -P eventlet -Q telegram_tasks --loglevel=INFO
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web

  celery_name:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A run.celery_app worker --concurrency 50 -P eventlet -Q name_tasks --loglevel=INFO
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web

  celery_email:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery  -A run.celery_app worker --concurrency 50 -P eventlet -Q email_tasks --loglevel=INFO
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web

  celery_company:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery  -A run.celery_app worker --concurrency 50 -P eventlet -Q company_tasks --loglevel=INFO
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web

  celery_delete:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A server.tasks.celery_app worker --loglevel=INFO
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - web

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 bots/notification_bot.py
    working_dir: /app/server
    volumes:
      - ./server:/app/server
      - tdlib_data:/app/server/api/scripts/tdlib_sources
      - db_data:/app/server/api/scripts/BotDB
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - web

  db_backup:
    image: postgres:14-alpine
    env_file: ./server/.env
    volumes:
      - ./backups:/backups
      - ./backup_script.sh:/backup_script.sh
    command: >
      sh -c 'ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime && 
            echo "0 3 * * * /backup_script.sh" > /etc/crontabs/root &&
            crond -f'
    restart: unless-stopped

volumes:
  redis_data:
  tdlib_data:
  db_data: