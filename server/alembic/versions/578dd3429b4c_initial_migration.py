"""initial migration

Revision ID: 578dd3429b4c
Revises: 
Create Date: 2025-05-02 16:26:09.213173

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '578dd3429b4c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'balance_history', 'user_queries', ['query_id'], ['query_id'])
    op.drop_column('balance_history', 'user_id')
    op.alter_column('blacklist', 'id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('events', 'event_id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('events', 'query_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'events', 'user_queries', ['query_id'], ['query_id'])
    op.drop_column('events', 'user_id')
    op.alter_column('payment_history', 'id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('payment_history', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'payment_history', 'users', ['user_id'], ['id'])
    op.alter_column('prohibited_sites', 'id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('queries_balance', 'transaction_id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.create_foreign_key(None, 'queries_balance', 'user_queries', ['query_id'], ['query_id'])
    op.alter_column('services_balance', 'id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('telegram_notifications', sa.Column('id', sa.Integer(), autoincrement=True))
    op.drop_constraint('telegram_notifications_chat_id_key', 'telegram_notifications', type_='unique')
    op.create_foreign_key(None, 'telegram_notifications', 'users', ['user_id'], ['id'])
    op.alter_column('text_data', 'id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.create_foreign_key(None, 'text_data', 'user_queries', ['query_id'], ['query_id'])
    op.add_column('user_balances', sa.Column('id', sa.Integer(), autoincrement=True))
    op.create_foreign_key(None, 'user_balances', 'users', ['user_id'], ['id'])
    op.alter_column('user_queries', 'query_id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('user_queries', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'user_queries', 'users', ['user_id'], ['id'])
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'user_queries', type_='foreignkey')
    op.alter_column('user_queries', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_queries', 'query_id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'user_balances', type_='foreignkey')
    op.drop_column('user_balances', 'id')
    op.drop_constraint(None, 'text_data', type_='foreignkey')
    op.alter_column('text_data', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'telegram_notifications', type_='foreignkey')
    op.create_unique_constraint('telegram_notifications_chat_id_key', 'telegram_notifications', ['chat_id'])
    op.drop_column('telegram_notifications', 'id')
    op.alter_column('services_balance', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'queries_balance', type_='foreignkey')
    op.alter_column('queries_balance', 'transaction_id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('prohibited_sites', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'payment_history', type_='foreignkey')
    op.alter_column('payment_history', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('payment_history', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('events', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.alter_column('events', 'query_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('events', 'event_id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('blacklist', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('balance_history', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'balance_history', type_='foreignkey')
    # ### end Alembic commands ###
